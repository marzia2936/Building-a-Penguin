Step 2
Target the body element to set the background to a linear gradient angled 45 degrees clockwise, starting at rgb(118, 201, 255) and ending at rgb(247, 255, 222).

body {
background:linear-gradient(45deg, rgb(118, 201, 255), rgb( 247, 255, 222))
}


Step 3
Normalise your page's sizing, by removing the body element's margin and padding.
body {
  background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
  margin: 0;
  padding: 0;
  
}
Step 5
Remove both the horizontal and vertical scrollbars, and prevent programmatic scrolling, using only one property.
body {
  background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100vh;
  overflow: clip;

}

Step 8
Give the .ground element a background with a linear gradient angled 90 degrees clockwise, starting at rgb(88, 175, 236) and ending at rgb(182, 255, 255).

.ground {
  width: 100vw;
  height: 400px;
  background: linear-gradient(90deg,rgb(88,175,236),rgb(182,255,255))

}

Step 10
Above the .ground element, add a div with a class of penguin. This div will contain Flappy Penguin.
<body>
<div class="penguin"></div>
    <div class="ground"></div>
        


  </body>

Step 16
To make the mountain look more like a mountain, you can use the skew transform function, which takes two arguments. The first being an angle to shear the x-axis by, and the second being an angle to shear the y-axis by.

Use the transform property to skew the mountain by 0deg in the x-axis and 44deg in the y-axis.

.left-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
  position: absolute;
   transform: skew(0deg, 44deg);
}

Step 17
Set the stack level of the mountain element such that it remains directly behind the .ground element.

.left-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
  position: absolute;
  transform: skew(0deg, 44deg);
  z-index: 2;

}

Step 18
To overlap the mountain and .ground elements better, give the mountain a margin-top of 100px, and the .ground element a margin-top of -58px.
.left-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
  position: absolute;
  transform: skew(0deg, 44deg);
  z-index: 2;
 margin-top: 100px;
}

.penguin {
  width: 300px;
  height: 300px;
  margin: auto;
  margin-top: 75px;
}

.ground {
  width: 100vw;
  height: 400px;
  background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));
  z-index: 3;
  position: absolute;
   margin-top: -58px;
  
}

Step 20
Target the .back-mountain element, and set its width and height to 300px. Then, set the background to a linear gradient starting at rgb(203, 241, 228) and ending at rgb(47, 170, 255).
.back-mountain{
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203,241,228),rgb(47,170,255))
}

Step 22
Change the stack level of the .back-mountain element such that it is directly behind the .left-mountain element.
.back-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));
  position: absolute;
  z-index: 1;
}

Step 23
Rotate the .back-mountain element by 45deg clockwise. Then, give it a left property of 110px, and a top property of 225px.

.back-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));
  position: absolute;
  z-index: 1;
  transform: rotate(45deg);
  left: 110px;
  top: 225px;

}

Step 24
To finish the background, add a sun, by creating a new div element immediately after the .back-mountain element, and give it the class of sun.
<body>
    <div class="left-mountain"></div>
    <div class="back-mountain"></div>
        <div class="sun"></div>


    <div class="penguin"></div>
    <div class="ground"></div>
  </body>

Step 26
Set the position property of the sun to prevent it from taking up space in the page layout, and set the border-radius such that the sun's shape is a circle.
.sun {
  width: 200px;
  height: 200px;
  background-color: yellow;
  position: absolute;
  border-radius: 50%;
  

}
Step 27
Position the sun in the top right corner of the screen such that 75px of its top and right edges are off screen.
.sun {
  width: 200px;
  height: 200px;
  background-color: yellow;
  position: absolute;
  border-radius: 50%;
top: -75px;
right: -75px;
}

Step 29
Change the stack level of the .penguin element such that it appears in front of the .ground element, and give it a position of relative.
.penguin {
  width: 300px;
  height: 300px;
  margin: auto;
  margin-top: 75px;
position: relative;
z-index:4;
}
Step 30
Target the .penguin-head element, and give it a width half of its parent's, and a height of 45%. Then, set the background to a linear gradient at 45deg starting at gray, and ending at rgb(239, 240, 228).
.penguin-head{
  width: 50%;
  height: 45%;
  background: linear-gradient(45deg,gray,rgb(239,240,228))
}

Step 31
Most penguins do not have a square head.

Give the penguin a slightly oval head by setting the radius of the top corners to 70% and the radius of the bottom corners to 65%.
.penguin-head {
  width: 50%;
	height: 45%;
  background: linear-gradient(
		45deg,
		gray,
		rgb(239, 240, 228)
	);
	
 border-radius: 70% 70% 65% 65%;
    top: 10%;
    left: 25%;
    z-index: 1;
}
Step 32
Target the .penguin-body element, and give it a width of 53%,
 and a height of 45%. Then, set the background to a linear gradient at 45deg, 
rgb(134, 133, 133) from 0%, rgb(234, 231, 231) from 25%, and white from 67%.

.penguin-body{
  width: 53%;
  height: 45%;
  background: linear-gradient(45deg,rgb(134,133,133) 0%,rgb(234,231,231) 25%,white 67%)
}
Step 34
Target all descendent elements of the .penguin element, and give them a position of absolute.
.penguin *{
  position: absolute;

}
Step 38
To give the penguin body a crest, create a pseudo-element that is the first child of the .penguin-body element. Set the content property of the pseudo-element to an empty string.

.penguin-body::before{
content: ""
}
Step 39
Position the pseudo-element relative to its closest positioned ancestor.
.penguin-body::before {
  content: "";
  position: absolute;

}
Step 40
Give the pseudo-element a width half that of its parent, a height of 45%, and a background-color of gray
.penguin-body::before {
  content: "";
  position: absolute;
  width: 50%;
  height: 45%;
  background-color: gray;

}


